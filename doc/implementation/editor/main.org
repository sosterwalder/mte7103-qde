*** DONE Main entry point
    CLOSED: [2017-03-16 Thu 10:19]

If you run the application at this point nothing happens. Python is able to
resolve all dependencies but as there is no =main= function there is nothing
else to do, so nothing happens. The execution of the main loop is started when
calling the =exec= function of a =QApplication=. So, for actually being able to
start the application, a =main= function is needed, which creates an instance of
the =Application= class and then runs its =exec= function.

The main function could easily be added to the =Application= class, but for
somebody who is not familiar with this applications' structure, this might be
rather confusing. Instead a =editor.py= file at the root of the source directory
=src= is much more intuitive.

All that the main file shall do, is creating an instance of the main
application, execute it and exit at the end of its life cycle.

As stated in <<Imports>>, the constructor of =QApplication= requires the
argument =arguments= to be passed in (yes, the naming may be a bit confusing
here). The =arguments= argument is a list of arguments passed when calling the
main entry point of the editor application. For example when calling =python editor.py foo bar baz=,
the variable =arguments= would be the list =[foo, bar, baz]= with
=len(arguments)= being 3. To obtain the passed-in arguments, the =argv=
attribute of the =sys= module may be used, as this holds exactly the list of the
passed-in arguments when calling a Python script.

The main entry script of the editor =editor.py= is therefore defined as follows.

#+NAME: main
#+ATTR_LaTeX: :options fontsize=\footnotesize,linenos,bgcolor=bashcodebg
#+CAPTION:    =<<main>>=, the main entry point for the whole editor application.
#+BEGIN_SRC python :tangle ../src/editor.py :noweb tangle :mkdirp yes
#!/usr/bin/python
# -*- coding: utf-8 -*-

""" Main entry point for the QDE editor application. """

# System imports
import sys

# Project imports
from qde.editor.application import application


if __name__ == "__main__":
    app = application.Application(sys.argv)
    status = app.exec()
    sys.exit(status)
#+END_SRC

If you run the application now, a bit more happens. Python is able to
resolve all dependencies and to find a =main= function which is then called.
The =main= function creates an instance of the =Application= class and executes
it by calling =exec=. This in turn enters the Qt main loop which keeps the
application running unless explicitly told to shut down. But at this point there
is nothing who could receive the request to shut down, so the only possibility
to shut down the application is to quit or kill the spawned Python process
itself --- not very nice.
